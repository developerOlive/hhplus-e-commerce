# 공통 설정
spring:
  application:
    name: hhplus

server:
  port: 8081
  tomcat:
    threads:
      max: 300
      min-spare: 30

custom:
  kafka:
    topic:
      order-completed: order.completed.v1
      coupon-issue-request: coupon.issue.request.v1
    consumer:
      group-id:
        order-data-platform: order-data-platform-consumer
        coupon-processor: coupon-issue-processor

---

# Local 환경
spring.config.activate.on-profile: local

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    hikari:
      maximum-pool-size: 30
      connection-timeout: 10000
      idle-timeout: 10000
      max-lifetime: 30000
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
  kafka:
    bootstrap-servers: localhost:9092
  data:
    redis:
      host: localhost
      port: 6379

redisson:
  address: redis://localhost:6379

---

# Docker 환경
spring.config.activate.on-profile: docker

spring:
  datasource:
    url: jdbc:mysql://mysql:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    hikari:
      maximum-pool-size: 30
      connection-timeout: 10000
      idle-timeout: 10000
      max-lifetime: 30000
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: false
  kafka:
    bootstrap-servers: kafka:9092
  data:
    redis:
      host: redis
      port: 6379

redisson:
  address: redis://redis:6379

---

# ✅ Test 환경
spring.config.activate.on-profile: test

spring:
  datasource:
    url: jdbc:mysql://mysql:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true

test:
  kafka:
    groupId: test-group-${random.uuid}
